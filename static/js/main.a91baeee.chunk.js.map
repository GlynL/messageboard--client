{"version":3,"sources":["reducers/auth.js","reducers/boards.js","reducers/threads.js","reducers/index.js","actions/auth/types.js","actions/boards/types.js","actions/threads/types.js","components/Header.js","variables.js","actions/boards/index.js","components/boards/BoardList.js","components/boards/Boards.js","actions/auth/index.js","components/auth/Signin.js","components/auth/Signup.js","components/auth/Signout.js","components/hocs/requireAuth.js","components/boards/NewBoard.js","components/boards/Threads.js","components/boards/Board.js","actions/threads/index.js","components/boards/NewThread.js","helpers/isObjectEmpty.js","components/boards/NewReply.js","components/boards/Replies.js","components/boards/Thread.js","index.js","components/App.js"],"names":["INITIAL_STATE","authenticated","errorMessage","boards","activeBoard","activeThread","combineReducers","auth","state","arguments","length","undefined","action","type","Object","objectSpread","payload","map","board","_id","threads","console","log","connect","props","react_default","a","createElement","className","Link","to","ROOT_URL","addBoard","form","token","callback","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","data","wrap","_context","prev","next","fetch","concat","method","headers","Content-Type","Authorization","body","JSON","stringify","sent","ok","Error","json","t0","stop","this","_x","apply","fetchBoards","_ref2","_callee2","_context2","_x2","setActive","name","filter","updateBoard","BoardList","key","renderBoards","Component","actions","authed","boards_BoardList","signup","response","localStorage","setItem","signin","signout","removeItem","defaultState","email","password","Signin","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","history","push","onSubmit","htmlFor","onChange","Signup","Signout","requireAuth","ChildComponent","ComposedComponent","_Component","inherits","createClass","shouldNavigateAway","NewBoard","_this$props","Threads","match","thread","params","title","text","keys","constructor","renderNewThreadLink","renderList","compose","withRouter","Board","boards_Threads","addThread","setActiveThread","id","addReply","NewThread","_e$target","error","isObjectEmpty","obj","NewReply","_this$props$match$par","threadActions","boardActions","replies","reply","boards_NewReply","Thread","prevProps","prevState","boards_Replies","store","createStore","reducers","getItem","applyMiddleware","reduxThunk","ReactDOM","render","es","BrowserRouter","basename","children","components_Header","Switch","Route","exact","path","component","Boards","document","getElementById"],"mappings":"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","file":"static/js/main.a91baeee.chunk.js","sourcesContent":["import { AUTH_USER, AUTH_ERROR } from \"../actions/auth/types\";\n\nconst INITIAL_STATE = {\n  authenticated: \"\",\n  errorMessage: \"\"\n};\n\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case AUTH_USER:\n      return { ...state, authenticated: action.payload };\n    case AUTH_ERROR:\n      return { ...state, errorMessage: action.payload };\n    default:\n      return state;\n  }\n}\n","import {\n  UPDATE_BOARD,\n  FETCH_BOARDS,\n  SET_ACTIVE,\n  BOARD_ERROR\n} from \"../actions/boards/types\";\n\nconst INITIAL_STATE = {\n  boards: [],\n  activeBoard: {},\n  errorMessage: \"\"\n};\n\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case FETCH_BOARDS:\n      return { ...state, boards: action.payload };\n    case SET_ACTIVE:\n      return { ...state, activeBoard: action.payload };\n    case UPDATE_BOARD: {\n      const boards = state.boards.map(board => {\n        if (board._id === action.payload._id) return action.payload;\n        return board;\n      });\n      return { ...state, boards };\n    }\n\n    case BOARD_ERROR:\n      return { ...state, errorMessage: action.payload };\n    default:\n      return state;\n  }\n}\n","import {\n  THREAD_ERROR,\n  ADD_REPLY,\n  SET_ACTIVE_THREAD\n} from \"../actions/threads/types\";\n\nconst INITIAL_STATE = {\n  activeThread: {},\n  errorMessage: \"\"\n};\n\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case THREAD_ERROR:\n      return { ...state, errorMessage: action.payload };\n    case SET_ACTIVE_THREAD:\n      console.log(action.payload);\n      return { ...state, activeThread: action.payload };\n    case ADD_REPLY:\n      return { ...state };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport boards from \"./boards\";\nimport threads from \"./threads\";\n\nexport default combineReducers({\n  auth,\n  boards,\n  threads\n});\n","export const AUTH_USER = \"auth_user\";\nexport const AUTH_ERROR = \"auth_error\";\n","export const ADD_BOARD = \"add_board\";\nexport const FETCH_BOARDS = \"fetch_boards\";\nexport const BOARD_ERROR = \"board_error\";\nexport const SET_ACTIVE = \"set_active\";\nexport const UPDATE_BOARD = \"update_board\";\n","export const ADD_REPLY = \"ADD_REPLY\";\nexport const ADD_THREAD = \"add_thread\";\nexport const THREAD_ERROR = \"thread_error\";\nexport const SET_ACTIVE_THREAD = \"SET_ACTIVE_THREAD\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"../styles/header.css\";\n\nconst Header = props => {\n  function renderLinks() {\n    if (props.authenticated) {\n      return (\n        <div className=\"header__nav-group\">\n          <Link className=\"header__nav-item\" to=\"/new-board\">\n            New Board\n          </Link>\n          <Link className=\"header__nav-item\" to=\"/signout\">\n            Sign out\n          </Link>\n        </div>\n      );\n    }\n    return (\n      <div className=\"header__nav-group\">\n        <Link className=\"header__nav-item\" to=\"/signup\">\n          Sign Up\n        </Link>\n        <Link className=\"header__nav-item\" to=\"/signin\">\n          Sign In\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <nav className=\"header__nav\">\n      <Link className=\"header__nav-item\" to=\"/\">\n        MessageBoard\n      </Link>\n      {renderLinks()}\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => ({ authenticated: state.auth.authenticated });\n\nexport default connect(mapStateToProps)(Header);\n","export const ROOT_URL = \"https://messageboard--glyn.herokuapp.com/api\";\n","import { ROOT_URL } from \"../../variables\";\nimport {\n  ADD_BOARD,\n  FETCH_BOARDS,\n  SET_ACTIVE,\n  BOARD_ERROR,\n  UPDATE_BOARD\n} from \"./types\";\n\nexport const addBoard = (form, token, callback) => async dispatch => {\n  try {\n    const res = await fetch(`${ROOT_URL}/boards`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      },\n      body: JSON.stringify(form)\n    });\n    if (!res.ok) throw new Error();\n    const data = await res.json();\n    dispatch({\n      type: ADD_BOARD,\n      payload: data\n    });\n    callback();\n  } catch (e) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: \"Board name already in use. Please use another.\"\n    });\n  }\n};\n\nexport const fetchBoards = () => async dispatch => {\n  try {\n    const res = await fetch(`${ROOT_URL}/boards`);\n    if (!res.ok) throw new Error();\n    const data = await res.json();\n    dispatch({\n      type: FETCH_BOARDS,\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: \"Error fetching boards. Please try again.\"\n    });\n  }\n};\n\nexport const setActive = (boards, name) => {\n  const board = boards.filter(board => board.name === name)[0];\n  if (!board)\n    return {\n      type: BOARD_ERROR,\n      payload: \"Error finding board. Please try again.\"\n    };\n  return {\n    type: SET_ACTIVE,\n    payload: board\n  };\n};\n\nexport const updateBoard = board => {\n  return {\n    type: UPDATE_BOARD,\n    payload: board\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../../actions/boards\";\nimport \"../../styles/boards-list.css\";\n\nclass BoardList extends Component {\n  componentDidMount() {\n    this.props.fetchBoards();\n  }\n\n  renderBoards() {\n    return (\n      <ul className=\"boards-list__list\">\n        {this.props.boards.boards.map(board => (\n          <li className=\"boards-list__list-item\" key={board._id}>\n            <Link className=\"boards-list__list-item-link\" to={`/${board.name}`}>\n              {board.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return <div className=\"boards-list\">{this.renderBoards()}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({ boards: state.boards });\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(BoardList);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport BoardList from \"./BoardList\";\nimport \"../../styles/boards.css\";\n\nconst Boards = props => {\n  return (\n    <section className=\"boards\">\n      <header className=\"boards__header\">\n        <h1 className=\"boards__header-title\">All Boards</h1>\n        <p>Click on a board to view threads.</p>\n        {props.authed && <Link to=\"/new-board\">Start a new Board.</Link>}\n        {!props.authed && <p>Sign up to start a new board.</p>}\n      </header>\n      <BoardList />\n    </section>\n  );\n};\n\nconst mapStateToProps = state => ({ authed: state.auth.authenticated });\n\nexport default connect(mapStateToProps)(Boards);\n","import { AUTH_USER, AUTH_ERROR } from \"./types\";\nimport { ROOT_URL } from \"../../variables\";\n\nexport const signup = (form, callback) => async dispatch => {\n  try {\n    // signup request with users info\n    const response = await fetch(`${ROOT_URL}/users/signup`, {\n      method: \"POST\",\n      body: JSON.stringify(form),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    // check response is ok\n    if (!response.ok) throw new Error();\n    // dispatch action with returend token\n    const data = await response.json();\n    dispatch({\n      type: AUTH_USER,\n      payload: data.token\n    });\n    localStorage.setItem(\"token\", data.token);\n    callback();\n  } catch (e) {\n    // if theres an error dispatch error message\n    dispatch({\n      type: AUTH_ERROR,\n      payload: \"Email already in use.\"\n    });\n  }\n};\n\nexport const signin = (form, callback) => async dispatch => {\n  try {\n    // signup request with users info\n    const response = await fetch(`${ROOT_URL}/users/login`, {\n      method: \"POST\",\n      body: JSON.stringify(form),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    // check response is ok\n    if (!response.ok) throw new Error();\n    // dispatch action with returend token\n    const data = await response.json();\n    dispatch({\n      type: AUTH_USER,\n      payload: data.token\n    });\n    localStorage.setItem(\"token\", data.token);\n    callback();\n  } catch (e) {\n    // if theres an error dispatch error message\n    dispatch({\n      type: AUTH_ERROR,\n      payload: \"Email/password do not match.\"\n    });\n  }\n};\n\nexport const signout = () => {\n  localStorage.removeItem(\"token\");\n  return { type: AUTH_USER, payload: \"\" };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/auth\";\n\nconst defaultState = {\n  email: \"\",\n  password: \"\"\n};\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signin(this.state, () => this.props.history.push(\"/\"));\n    this.setState({ ...defaultState });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Sign In</h1>\n        <div>{this.props.errorMessage}</div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\" />\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <button>Sign Up</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ errorMessage: state.auth.errorMessage });\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Signin);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/auth\";\n\nconst defaultState = {\n  email: \"\",\n  password: \"\"\n};\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signup(this.state, () => this.props.history.push(\"/\"));\n    this.setState({ ...defaultState });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Signup</h1>\n        <div>{this.props.errorMessage}</div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\" />\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <button>Sign Up</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ errorMessage: state.auth.errorMessage });\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Signup);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/auth\";\n\nclass Signout extends Component {\n  componentDidMount() {\n    this.props.signout();\n  }\n\n  render() {\n    return <div>Sorry to see you go.</div>;\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(Signout);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nexport default ChildComponent => {\n  class ComposedComponent extends Component {\n    // Our component just got rendered\n    componentDidMount() {\n      this.shouldNavigateAway();\n    }\n    // Our component just got updated\n    componentDidUpdate() {\n      this.shouldNavigateAway();\n    }\n    shouldNavigateAway() {\n      if (!this.props.auth) {\n        this.props.history.push(\"/\");\n      }\n    }\n    render() {\n      return <ChildComponent {...this.props} />;\n    }\n  }\n  function mapStateToProps(state) {\n    return { auth: state.auth.authenticated };\n  }\n  return connect(mapStateToProps)(ComposedComponent);\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/boards\";\nimport requireAuth from \"../hocs/requireAuth\";\n\nconst INITIAL_STATE = { name: \"\" };\n\nclass NewBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { history, token } = this.props;\n    this.props.addBoard(this.state, token, () => history.push(\"/\"));\n  };\n\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    return (\n      <section>\n        <header>\n          <h1>Add New Board</h1>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n          <button>Add Board</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ token: state.auth.authenticated });\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(requireAuth(NewBoard));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport \"../../styles/threads.css\";\n\nclass Threads extends Component {\n  renderList() {\n    const { board, match } = this.props;\n    return board.threads.map(thread => (\n      <li className=\"threads__list-item\" key={thread._id}>\n        <Link\n          className=\"threads__list-item-link\"\n          to={`/${match.params.board}/${thread._id}`}\n        >\n          <h2 className=\"threads__list-item-link-heading\">{thread.title}</h2>\n          <p className=\"threads__list-item-link-subheading\">{thread.text}</p>\n        </Link>\n      </li>\n    ));\n  }\n\n  renderNewThreadLink() {\n    if (this.props.authed) {\n      return (\n        <div>\n          <Link to={`/${this.props.board.name}/new-thread`}>\n            Start new thread.\n          </Link>\n        </div>\n      );\n    }\n    return <p>Sign up to start your own thread.</p>;\n  }\n\n  render() {\n    if (\n      Object.keys(this.props.board).length === 0 &&\n      this.props.board.constructor === Object\n    ) {\n      return <div>loading...</div>;\n    }\n\n    return (\n      <div className=\"threads\">\n        <h1 className=\"threads__title\">Threads</h1>\n        {this.renderNewThreadLink()}\n\n        <ul className=\"threads__list\">{this.renderList()}</ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  board: state.boards.activeBoard,\n  authed: state.auth.authenticated\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps)\n)(Threads);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/boards\";\nimport Threads from \"./Threads\";\nimport \"../../styles/board.css\";\n\nclass Board extends Component {\n  componentDidMount() {\n    this.props.fetchBoards();\n  }\n\n  componentDidUpdate() {\n    this.props.setActive(this.props.boards, this.props.match.params.board);\n  }\n\n  render() {\n    if (\n      Object.keys(this.props.board).length === 0 &&\n      this.props.board.constructor === Object\n    ) {\n      return <div>loading...</div>;\n    }\n    return (\n      <section>\n        <h1 className=\"board__title\">{this.props.board.name}</h1>\n        <Threads />\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  board: state.boards.activeBoard,\n  boards: state.boards.boards\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Board);\n","import { ROOT_URL } from \"../../variables\";\nimport { ADD_THREAD, SET_ACTIVE_THREAD, THREAD_ERROR } from \"./types\";\n\nexport const addThread = (form, board, token, callback) => async dispatch => {\n  try {\n    const res = await fetch(`${ROOT_URL}/${board}/threads`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      },\n      body: JSON.stringify(form)\n    });\n    if (!res.ok) throw new Error();\n    const data = res.json();\n    dispatch({\n      type: ADD_THREAD,\n      payload: data\n    });\n    callback();\n  } catch (e) {\n    dispatch({\n      type: THREAD_ERROR,\n      payload: \"Error creating thread. Please try again.\"\n    });\n  }\n};\n\nexport const setActiveThread = (id, board) => {\n  const thread = board.threads.filter(thread => thread._id === id)[0];\n  return {\n    type: SET_ACTIVE_THREAD,\n    payload: thread\n  };\n};\n\nexport const addReply = (\n  form,\n  board,\n  thread,\n  token,\n  callback\n) => async dispatch => {\n  try {\n    const res = await fetch(`${ROOT_URL}/${board}/${thread}/replies`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      },\n      body: JSON.stringify(form)\n    });\n    if (!res.ok) throw new Error();\n    const data = await res.json();\n    if (callback) callback(data.board);\n    dispatch({\n      type: SET_ACTIVE_THREAD,\n      payload: data.thread\n    });\n  } catch (e) {\n    dispatch({\n      type: THREAD_ERROR,\n      payload: \"Error adding reply. Please try again.\"\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport requireAuth from \"../hocs/requireAuth\";\nimport * as actions from \"../../actions/threads\";\n\nconst INITIAL_STATE = {\n  title: \"\",\n  text: \"\"\n};\n\nclass NewThread extends Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const board = this.props.match.params.board;\n    // api uses board name not id\n    this.props.addThread(this.state, board, this.props.token, () =>\n      this.props.history.push(`/${board}`)\n    );\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <p>{this.props.error}</p>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"title\">Title</label>\n          <input\n            onChange={this.handleChange}\n            value={this.state.title}\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n          />\n          <label htmlFor=\"text\">Text</label>\n          <textarea\n            onChange={this.handleChange}\n            value={this.state.text}\n            name=\"text\"\n            id=\"text\"\n          />\n          <button>Create Thread</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  token: state.auth.authenticated,\n  error: state.threads.errorMessage\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(requireAuth(NewThread));\n","export default function(obj) {\n  if (Object.keys(obj).length === 0 && obj.constructor === Object) {\n    return true;\n  }\n  return false;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport * as threadActions from \"../../actions/threads\";\nimport * as boardActions from \"../../actions/boards\";\n\nconst INITIAL_STATE = {\n  text: \"\"\n};\n\nclass NewReply extends Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { board, thread } = this.props.match.params;\n    this.props.addReply(\n      this.state,\n      board,\n      thread,\n      this.props.token,\n      this.props.updateBoard\n    );\n    this.setState(INITIAL_STATE);\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    if (!this.props.token) return <div>Login to leave a reply.</div>;\n    return (\n      <div>\n        <h2>Add your reply</h2>\n        <p>{this.props.error}</p>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"text\">Text</label>\n          <textarea\n            onChange={this.handleChange}\n            value={this.state.text}\n            name=\"text\"\n            id=\"text\"\n          />\n          <button>Add Reply</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  token: state.auth.authenticated,\n  error: state.threads.errorMessage\n});\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    { ...threadActions, ...boardActions }\n  )\n)(NewReply);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport NewReply from \"./NewReply\";\nimport \"../../styles/replies.css\";\n\nconst Replies = props => {\n  const renderReplies = () =>\n    props.thread.replies.map(reply => (\n      <li className=\"replies__list-item\" key={reply._id}>\n        <p>{reply.text}</p>\n      </li>\n    ));\n  return (\n    <div className=\"replies\">\n      <h1>Replies</h1>\n      <ul className=\"replies__list\">{renderReplies()}</ul>\n      <NewReply />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({ thread: state.threads.activeThread });\n\nexport default connect(mapStateToProps)(Replies);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as boardActions from \"../../actions/boards\";\nimport * as threadActions from \"../../actions/threads\";\nimport isObjectEmpty from \"../../helpers/isObjectEmpty\";\nimport Replies from \"./Replies\";\nimport \"../../styles/thread.css\";\n\nclass Thread extends Component {\n  componentDidMount() {\n    this.props.fetchBoards();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // flow is ugly because no single get api\n    this.props.setActive(this.props.boards, this.props.match.params.board);\n    if (!isObjectEmpty(this.props.board)) {\n      this.props.setActiveThread(\n        this.props.match.params.thread,\n        this.props.board\n      );\n    }\n  }\n\n  render() {\n    if (isObjectEmpty(this.props.thread)) {\n      return <div>loading...</div>;\n    }\n    return (\n      <section className=\"thread\">\n        <div className=\"thread__info\">\n          <Link to={`/${this.props.board.name}`}>\n            Back to {this.props.board.name}\n          </Link>\n          <h1>{this.props.thread.title}</h1>\n          <p>{this.props.thread.text}</p>\n        </div>\n\n        <Replies />\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  board: state.boards.activeBoard,\n  boards: state.boards.boards,\n  thread: state.threads.activeThread\n});\n\nexport default connect(\n  mapStateToProps,\n  { ...boardActions, ...threadActions }\n)(Thread);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\nimport App from \"./components/App\";\nimport Boards from \"./components/boards/Boards\";\nimport Signin from \"./components/auth/Signin\";\nimport Signup from \"./components/auth/Signup\";\nimport Signout from \"./components/auth/Signout\";\nimport NewBoard from \"./components/boards/NewBoard\";\nimport Board from \"./components/boards/Board\";\nimport NewThread from \"./components/boards/NewThread\";\nimport Thread from \"./components/boards/Thread\";\n\nimport \"./styles/index.css\";\n\nconst store = createStore(\n  reducers,\n  {\n    auth: { authenticated: localStorage.getItem(\"token\") }\n  },\n  applyMiddleware(reduxThunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/messageboard\">\n      <App>\n        <Switch>\n          <Route exact path=\"/\" component={Boards} />\n          <Route path=\"/new-board\" component={NewBoard} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/signin\" component={Signin} />\n          <Route path=\"/signout\" component={Signout} />\n          <Route path=\"/:board/new-thread\" component={NewThread} />\n          <Route path=\"/:board/:thread\" component={Thread} />\n          <Route path=\"/:board\" component={Board} />\n        </Switch>\n      </App>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport Header from \"./Header\";\n\nexport default ({ children }) => (\n  <div className=\"App\">\n    <Header />\n    {children}\n  </div>\n);\n"],"sourceRoot":""}
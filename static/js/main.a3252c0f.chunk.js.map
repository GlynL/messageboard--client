{"version":3,"sources":["reducers/auth.js","reducers/boards.js","reducers/threads.js","reducers/index.js","actions/auth/types.js","actions/boards/types.js","actions/threads/types.js","components/Header.js","variables.js","actions/boards/index.js","components/boards/BoardList.js","components/boards/Boards.js","actions/auth/index.js","components/auth/Form.js","components/auth/Signin.js","components/auth/Signup.js","components/auth/Signout.js","components/hocs/requireAuth.js","components/boards/NewBoard.js","components/boards/Threads.js","helpers/isObjectEmpty.js","components/boards/Board.js","actions/threads/index.js","components/boards/NewThread.js","components/boards/NewReply.js","components/boards/Replies.js","components/boards/Thread.js","index.js","components/App.js"],"names":["INITIAL_STATE","authenticated","errorMessage","boards","activeBoard","activeThread","combineReducers","auth","state","arguments","length","undefined","action","type","Object","objectSpread","payload","map","board","_id","threads","connect","props","react_default","a","createElement","className","Link","to","ROOT_URL","addBoard","form","token","callback","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","data","wrap","_context","prev","next","fetch","concat","method","headers","Content-Type","Authorization","body","JSON","stringify","sent","ok","Error","json","t0","stop","this","_x","apply","fetchBoards","_ref2","_callee2","_context2","_x2","setActive","name","_ref3","_callee3","_context3","_x3","updateBoard","BoardList","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","renderBoards","Component","actions","authed","boards_BoardList","signup","response","localStorage","setItem","signin","signout","removeItem","Form","_this","call","handleChange","e","setState","defineProperty","target","handleSubmit","preventDefault","email","password","onSubmit","htmlFor","onChange","buttonText","React","defaultProps","auth_Form","user","history","push","Signout","requireAuth","ChildComponent","ComposedComponent","shouldNavigateAway","NewBoard","_this$props","Threads","match","thread","params","title","text","keys","constructor","renderNewThreadLink","renderList","compose","withRouter","isObjectEmpty","obj","Board","boards_Threads","addThread","setActiveThread","id","filter","addReply","NewThread","_e$target","error","NewReply","_this$props$match$par","threadActions","boardActions","replies","reply","boards_NewReply","Thread","prevProps","prevState","boards_Replies","store","createStore","reducers","getItem","applyMiddleware","reduxThunk","ReactDOM","render","es","BrowserRouter","basename","children","components_Header","Switch","Route","exact","path","component","Boards","Signup","Signin","document","getElementById"],"mappings":"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","file":"static/js/main.a3252c0f.chunk.js","sourcesContent":["import { AUTH_USER, AUTH_ERROR } from \"../actions/auth/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  authenticated: \"\",\r\n  errorMessage: \"\"\r\n};\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case AUTH_USER:\r\n      return { ...state, authenticated: action.payload };\r\n    case AUTH_ERROR:\r\n      return { ...state, errorMessage: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  UPDATE_BOARD,\r\n  FETCH_BOARDS,\r\n  SET_ACTIVE,\r\n  BOARD_ERROR\r\n} from \"../actions/boards/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  boards: [],\r\n  activeBoard: {},\r\n  errorMessage: \"\"\r\n};\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case FETCH_BOARDS:\r\n      return { ...state, boards: action.payload };\r\n    case SET_ACTIVE:\r\n      return { ...state, activeBoard: action.payload };\r\n    case UPDATE_BOARD: {\r\n      const boards = state.boards.map(board => {\r\n        if (board._id === action.payload._id) return action.payload;\r\n        return board;\r\n      });\r\n      return { ...state, boards };\r\n    }\r\n\r\n    case BOARD_ERROR:\r\n      return { ...state, errorMessage: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { THREAD_ERROR, SET_ACTIVE_THREAD } from \"../actions/threads/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  activeThread: {},\r\n  errorMessage: \"\"\r\n};\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case THREAD_ERROR:\r\n      return { ...state, errorMessage: action.payload };\r\n    case SET_ACTIVE_THREAD:\r\n      return { ...state, activeThread: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport boards from \"./boards\";\r\nimport threads from \"./threads\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  boards,\r\n  threads\r\n});\r\n","export const AUTH_USER = \"auth_user\";\r\nexport const AUTH_ERROR = \"auth_error\";\r\n","export const ADD_BOARD = \"add_board\";\r\nexport const FETCH_BOARDS = \"fetch_boards\";\r\nexport const BOARD_ERROR = \"board_error\";\r\nexport const SET_ACTIVE = \"set_active\";\r\nexport const UPDATE_BOARD = \"update_board\";\r\n","export const ADD_THREAD = \"add_thread\";\r\nexport const THREAD_ERROR = \"thread_error\";\r\nexport const SET_ACTIVE_THREAD = \"SET_ACTIVE_THREAD\";\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../styles/header.css\";\r\n\r\nexport const Header = props => {\r\n  function renderLinks() {\r\n    if (props.authenticated) {\r\n      return (\r\n        <div className=\"header__nav-group\">\r\n          <Link className=\"header__nav-item\" to=\"/new-board\">\r\n            New Board\r\n          </Link>\r\n          <Link className=\"header__nav-item\" to=\"/signout\">\r\n            Sign out\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"header__nav-group\">\r\n        <Link className=\"header__nav-item\" to=\"/signup\">\r\n          Sign Up\r\n        </Link>\r\n        <Link className=\"header__nav-item\" to=\"/signin\">\r\n          Sign In\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav className=\"header__nav\">\r\n      <Link className=\"header__nav-item\" to=\"/\">\r\n        MessageBoard\r\n      </Link>\r\n      {renderLinks()}\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ authenticated: state.auth.authenticated });\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","export const ROOT_URL = \"https://messageboard--glyn.herokuapp.com/api\";\r\n// export const ROOT_URL = \"http://localhost:8080/api\";\r\n","import { ROOT_URL } from \"../../variables\";\r\nimport {\r\n  ADD_BOARD,\r\n  FETCH_BOARDS,\r\n  SET_ACTIVE,\r\n  BOARD_ERROR,\r\n  UPDATE_BOARD\r\n} from \"./types\";\r\n\r\nexport const addBoard = (form, token, callback) => async dispatch => {\r\n  try {\r\n    const res = await fetch(`${ROOT_URL}/boards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token\r\n      },\r\n      body: JSON.stringify(form)\r\n    });\r\n    if (!res.ok) throw new Error();\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: data\r\n    });\r\n    callback();\r\n  } catch (e) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: \"Board name already in use. Please use another.\"\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchBoards = () => async dispatch => {\r\n  try {\r\n    const res = await fetch(`${ROOT_URL}/boards`);\r\n    if (!res.ok) throw new Error();\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: FETCH_BOARDS,\r\n      payload: data\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: \"Error fetching boards. Please try again.\"\r\n    });\r\n  }\r\n};\r\n\r\nexport const setActive = name => async dispatch => {\r\n  try {\r\n    const res = await fetch(`${ROOT_URL}/boards?name=${name}`);\r\n    if (!res.ok) throw new Error();\r\n    const board = await res.json();\r\n    dispatch({\r\n      type: SET_ACTIVE,\r\n      payload: board\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: \"Error finding board. Please try again.\"\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateBoard = board => {\r\n  return {\r\n    type: UPDATE_BOARD,\r\n    payload: board\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/boards\";\r\nimport \"../../styles/boards-list.css\";\r\n\r\nexport class BoardList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchBoards();\r\n  }\r\n\r\n  renderBoards() {\r\n    return (\r\n      <ul className=\"boards-list__list\">\r\n        {this.props.boards.boards.map(board => (\r\n          <li className=\"boards-list__list-item\" key={board._id}>\r\n            <Link className=\"boards-list__list-item-link\" to={`/${board.name}`}>\r\n              {board.name}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"boards-list\">{this.renderBoards()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ boards: state.boards });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(BoardList);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport BoardList from \"./BoardList\";\r\nimport \"../../styles/boards.css\";\r\n\r\nexport const Boards = props => {\r\n  return (\r\n    <section className=\"boards\">\r\n      <header className=\"boards__header\">\r\n        <h1 className=\"boards__header-title\">All Boards</h1>\r\n        <p>Click on a board to view threads.</p>\r\n        {props.authed && <Link to=\"/new-board\">Start a new Board.</Link>}\r\n        {!props.authed && <p>Sign up to start a new board.</p>}\r\n      </header>\r\n      <BoardList />\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ authed: state.auth.authenticated });\r\n\r\nexport default connect(mapStateToProps)(Boards);\r\n","import { AUTH_USER, AUTH_ERROR } from \"./types\";\r\nimport { ROOT_URL } from \"../../variables\";\r\n\r\nexport const signup = (form, callback) => async dispatch => {\r\n  try {\r\n    // signup request with users info\r\n    const response = await fetch(`${ROOT_URL}/users/signup`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(form),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    // check response is ok\r\n    if (!response.ok) throw new Error();\r\n    // dispatch action with returend token\r\n    const data = await response.json();\r\n    dispatch({\r\n      type: AUTH_USER,\r\n      payload: data.token\r\n    });\r\n    localStorage.setItem(\"token\", data.token);\r\n    callback();\r\n  } catch (e) {\r\n    // if theres an error dispatch error message\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: \"Email already in use.\"\r\n    });\r\n  }\r\n};\r\n\r\nexport const signin = (form, callback) => async dispatch => {\r\n  try {\r\n    // signup request with users info\r\n    const response = await fetch(`${ROOT_URL}/users/login`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(form),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    // check response is ok\r\n    if (!response.ok) throw new Error();\r\n    // dispatch action with returend token\r\n    const data = await response.json();\r\n    dispatch({\r\n      type: AUTH_USER,\r\n      payload: data.token\r\n    });\r\n    localStorage.setItem(\"token\", data.token);\r\n    callback();\r\n  } catch (e) {\r\n    // if theres an error dispatch error message\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: \"Email/password do not match.\"\r\n    });\r\n  }\r\n};\r\n\r\nexport const signout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  return { type: AUTH_USER, payload: \"\" };\r\n};\r\n","import React from \"react\";\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.handleSubmit(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor=\"password\" />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.password}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button>{this.props.buttonText}</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.defaultProps = {\r\n  buttonText: \"Submit\"\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/auth\";\r\n\r\nimport Form from \"./Form\";\r\n\r\nexport const Signin = props => {\r\n  function handleSubmit(user) {\r\n    props.signin(user, () => props.history.push(\"/\"));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sign In</h1>\r\n      {props.errorMessage && <div>{props.errorMessage}</div>}\r\n      <Form handleSubmit={handleSubmit} buttonText=\"Sign In\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ errorMessage: state.auth.errorMessage });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(Signin);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/auth\";\r\n\r\nimport Form from \"./Form\";\r\n\r\nexport const Signup = props => {\r\n  const handleSubmit = user => {\r\n    props.signup(user, () => props.history.push(\"/\"));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Signup</h1>\r\n      {props.errorMessage && <div>{props.errorMessage}</div>}\r\n      <Form handleSubmit={handleSubmit} buttonText=\"Sign Up\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ errorMessage: state.auth.errorMessage });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(Signup);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/auth\";\r\n\r\nexport class Signout extends Component {\r\n  componentDidMount() {\r\n    this.props.signout();\r\n  }\r\n\r\n  render() {\r\n    return <div>Sorry to see you go.</div>;\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  actions\r\n)(Signout);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport default ChildComponent => {\r\n  class ComposedComponent extends Component {\r\n    // Our component just got rendered\r\n    componentDidMount() {\r\n      this.shouldNavigateAway();\r\n    }\r\n    // Our component just got updated\r\n    componentDidUpdate() {\r\n      this.shouldNavigateAway();\r\n    }\r\n    shouldNavigateAway() {\r\n      if (!this.props.auth) {\r\n        this.props.history.push(\"/\");\r\n      }\r\n    }\r\n    render() {\r\n      return <ChildComponent {...this.props} />;\r\n    }\r\n  }\r\n  function mapStateToProps(state) {\r\n    return { auth: state.auth.authenticated };\r\n  }\r\n  return connect(mapStateToProps)(ComposedComponent);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/boards\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\n\r\nconst INITIAL_STATE = { name: \"\" };\r\n\r\nexport class NewBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = INITIAL_STATE;\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { history, token } = this.props;\r\n    this.props.addBoard(this.state, token, () => history.push(\"/\"));\r\n  };\r\n\r\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <header>\r\n          <h1>Add New Board</h1>\r\n        </header>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button>Add Board</button>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ token: state.auth.authenticated });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(requireAuth(NewBoard));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport \"../../styles/threads.css\";\r\n\r\nexport class Threads extends Component {\r\n  renderList() {\r\n    const { board, match } = this.props;\r\n\r\n    return board.threads.map(thread => (\r\n      <li className=\"threads__list-item\" key={thread._id}>\r\n        <Link\r\n          className=\"threads__list-item-link\"\r\n          to={`/${match.params.board}/${thread._id}`}\r\n        >\r\n          <h2 className=\"threads__list-item-link-heading\">{thread.title}</h2>\r\n          <p className=\"threads__list-item-link-subheading\">{thread.text}</p>\r\n        </Link>\r\n      </li>\r\n    ));\r\n  }\r\n\r\n  renderNewThreadLink() {\r\n    if (this.props.authed) {\r\n      return (\r\n        <div>\r\n          <Link to={`/${this.props.board.name}/new-thread`}>\r\n            Start new thread.\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n    return <p>Sign up to start your own thread.</p>;\r\n  }\r\n\r\n  render() {\r\n    if (\r\n      Object.keys(this.props.board).length === 0 &&\r\n      this.props.board.constructor === Object\r\n    ) {\r\n      return <div>loading...</div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"threads\">\r\n        <h1 className=\"threads__title\">Threads</h1>\r\n        {this.renderNewThreadLink()}\r\n\r\n        <ul className=\"threads__list\">{this.renderList()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: state.boards.activeBoard,\r\n  authed: state.auth.authenticated\r\n});\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps)\r\n)(Threads);\r\n","export default function(obj) {\r\n  if (Object.keys(obj).length === 0 && obj.constructor === Object) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActive } from \"../../actions/boards\";\r\nimport Threads from \"./Threads\";\r\nimport isObjectEmpty from \"../../helpers/isObjectEmpty\";\r\nimport \"../../styles/board.css\";\r\n\r\nexport class Board extends Component {\r\n  componentDidMount() {\r\n    this.props.setActive(this.props.match.params.board);\r\n  }\r\n\r\n  render() {\r\n    if (isObjectEmpty(this.props.board)) {\r\n      return <div>loading...</div>;\r\n    }\r\n    return (\r\n      <section>\r\n        <h1 className=\"board__title\">{this.props.board.name}</h1>\r\n        <Threads />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: state.boards.activeBoard\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setActive }\r\n)(Board);\r\n","import { ROOT_URL } from \"../../variables\";\r\nimport { ADD_THREAD, SET_ACTIVE_THREAD, THREAD_ERROR } from \"./types\";\r\n\r\nexport const addThread = (form, board, token, callback) => async dispatch => {\r\n  try {\r\n    const res = await fetch(`${ROOT_URL}/${board}/threads`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token\r\n      },\r\n      body: JSON.stringify(form)\r\n    });\r\n    if (!res.ok) throw new Error();\r\n    const data = res.json();\r\n    dispatch({\r\n      type: ADD_THREAD,\r\n      payload: data\r\n    });\r\n    callback();\r\n  } catch (e) {\r\n    dispatch({\r\n      type: THREAD_ERROR,\r\n      payload: \"Error creating thread. Please try again.\"\r\n    });\r\n  }\r\n};\r\n\r\nexport const setActiveThread = (id, board) => {\r\n  const thread = board.threads.filter(thread => thread._id === id)[0];\r\n  return {\r\n    type: SET_ACTIVE_THREAD,\r\n    payload: thread\r\n  };\r\n};\r\n\r\nexport const addReply = (\r\n  form,\r\n  board,\r\n  thread,\r\n  token,\r\n  callback\r\n) => async dispatch => {\r\n  try {\r\n    const res = await fetch(`${ROOT_URL}/${board}/${thread}/replies`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token\r\n      },\r\n      body: JSON.stringify(form)\r\n    });\r\n    if (!res.ok) throw new Error();\r\n    const data = await res.json();\r\n    if (callback) callback(data.board);\r\n    dispatch({\r\n      type: SET_ACTIVE_THREAD,\r\n      payload: data.thread\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: THREAD_ERROR,\r\n      payload: \"Error adding reply. Please try again.\"\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport requireAuth from \"../hocs/requireAuth\";\r\nimport * as actions from \"../../actions/threads\";\r\n\r\nconst INITIAL_STATE = {\r\n  title: \"\",\r\n  text: \"\"\r\n};\r\n\r\nexport class NewThread extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = INITIAL_STATE;\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const board = this.props.match.params.board;\r\n    // api uses board name not id\r\n    this.props.addThread(this.state, board, this.props.token, () =>\r\n      this.props.history.push(`/${board}`)\r\n    );\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>{this.props.error}</p>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={this.state.title}\r\n            type=\"text\"\r\n            name=\"title\"\r\n            id=\"title\"\r\n          />\r\n          <label htmlFor=\"text\">Text</label>\r\n          <textarea\r\n            onChange={this.handleChange}\r\n            value={this.state.text}\r\n            name=\"text\"\r\n            id=\"text\"\r\n          />\r\n          <button>Create Thread</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.auth.authenticated,\r\n  error: state.threads.errorMessage\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(requireAuth(NewThread));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as threadActions from \"../../actions/threads\";\r\nimport * as boardActions from \"../../actions/boards\";\r\n\r\nconst INITIAL_STATE = {\r\n  text: \"\"\r\n};\r\n\r\nexport class NewReply extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = INITIAL_STATE;\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { board, thread } = this.props.match.params;\r\n    this.props.addReply(\r\n      this.state,\r\n      board,\r\n      thread,\r\n      this.props.token,\r\n      this.props.updateBoard\r\n    );\r\n    this.setState(INITIAL_STATE);\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.token) return <div>Login to leave a reply.</div>;\r\n    return (\r\n      <div>\r\n        <h2>Add your reply</h2>\r\n        <p>{this.props.error}</p>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"text\">Text</label>\r\n          <textarea\r\n            onChange={this.handleChange}\r\n            value={this.state.text}\r\n            name=\"text\"\r\n            id=\"text\"\r\n          />\r\n          <button>Add Reply</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.auth.authenticated,\r\n  error: state.threads.errorMessage\r\n});\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(\r\n    mapStateToProps,\r\n    { ...threadActions, ...boardActions }\r\n  )\r\n)(NewReply);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport NewReply from \"./NewReply\";\r\nimport \"../../styles/replies.css\";\r\n\r\nexport const Replies = props => {\r\n  const renderReplies = () =>\r\n    props.thread.replies.map(reply => (\r\n      <li className=\"replies__list-item\" key={reply._id}>\r\n        <p>{reply.text}</p>\r\n      </li>\r\n    ));\r\n  return (\r\n    <div className=\"replies\">\r\n      <h1>Replies</h1>\r\n      <ul className=\"replies__list\">{renderReplies()}</ul>\r\n      <NewReply />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ thread: state.threads.activeThread });\r\n\r\nexport default connect(mapStateToProps)(Replies);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setActive } from \"../../actions/boards\";\r\nimport { setActiveThread } from \"../../actions/threads\";\r\nimport isObjectEmpty from \"../../helpers/isObjectEmpty\";\r\nimport Replies from \"./Replies\";\r\nimport \"../../styles/thread.css\";\r\n\r\nexport class Thread extends Component {\r\n  componentDidMount() {\r\n    this.props.setActive(this.props.match.params.board);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!isObjectEmpty(this.props.board)) {\r\n      this.props.setActiveThread(\r\n        this.props.match.params.thread,\r\n        this.props.board\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (isObjectEmpty(this.props.thread)) {\r\n      return <div>loading...</div>;\r\n    }\r\n    return (\r\n      <section className=\"thread\">\r\n        <div className=\"thread__info\">\r\n          <Link to={`/${this.props.board.name}`}>\r\n            Back to {this.props.board.name}\r\n          </Link>\r\n          <h1>{this.props.thread.title}</h1>\r\n          <p>{this.props.thread.text}</p>\r\n        </div>\r\n\r\n        <Replies />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: state.boards.activeBoard,\r\n  thread: state.threads.activeThread\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setActive, setActiveThread }\r\n)(Thread);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nimport reducers from \"./reducers\";\r\nimport App from \"./components/App\";\r\nimport Boards from \"./components/boards/Boards\";\r\nimport Signin from \"./components/auth/Signin\";\r\nimport Signup from \"./components/auth/Signup\";\r\nimport Signout from \"./components/auth/Signout\";\r\nimport NewBoard from \"./components/boards/NewBoard\";\r\nimport Board from \"./components/boards/Board\";\r\nimport NewThread from \"./components/boards/NewThread\";\r\nimport Thread from \"./components/boards/Thread\";\r\n\r\nimport \"./styles/index.css\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  {\r\n    auth: { authenticated: localStorage.getItem(\"token\") }\r\n  },\r\n  applyMiddleware(reduxThunk)\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter basename=\"/messageboard\">\r\n      <App>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Boards} />\r\n          <Route path=\"/new-board\" component={NewBoard} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/signin\" component={Signin} />\r\n          <Route path=\"/signout\" component={Signout} />\r\n          <Route path=\"/:board/new-thread\" component={NewThread} />\r\n          <Route path=\"/:board/:thread\" component={Thread} />\r\n          <Route path=\"/:board\" component={Board} />\r\n        </Switch>\r\n      </App>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nexport default ({ children }) => (\r\n  <div className=\"App\">\r\n    <Header />\r\n    {children}\r\n  </div>\r\n);\r\n"],"sourceRoot":""}